apiVersion: v1
kind: Template
labels:
  template: hello-world-app
metadata:
  annotations:
    description: Hello World application deployment
    tags: python
  name: "${APPLICATION_NAME}"
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}-production"
  spec:
    replicas: 2
    selector:
      app: "${APPLICATION_NAME}"
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}"
          env: production
      spec:
        containers:
        - image: "${APPLICATION_NAME}:latest"
          imagePullPolicy: Always
          name: "${APPLICATION_NAME}"
          ports:
          - name: metrics
            containerPort: 8000
            protocol: TCP
          - name: web
            containerPort: 8080
            protocol: TCP
          resources: {}
    test: false
    triggers: []
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}-canary"
  spec:
    replicas: 1
    selector:
      app: "${APPLICATION_NAME}"
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}"
          env: canary
      spec:
        containers:
        - image: "${APPLICATION_NAME}:latest"
          imagePullPolicy: Always
          name: "${APPLICATION_NAME}"
          ports:
          - name: metrics
            containerPort: 8000
            protocol: TCP
          - name: web
            containerPort: 8080
            protocol: TCP
          resources: {}
    test: false
    triggers: []
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/path: "/"
      prometheus.io/port: "8000"
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    ports:
    - name: web
      port: 8080
    - name: metrics
      port: 8000
    selector:
      env: production
    type: LoadBalancer
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/path: "/"
      prometheus.io/port: "8000"
    labels:
      app: "${APPLICATION_NAME}-canary"
    name: "${APPLICATION_NAME}-canary"
  spec:
    ports:
    - name: web
      port: 8080
    - name: metrics
      port: 8000
    selector:
      env: canary
    type: LoadBalancer
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    alternateBackends:
    - kind: Service
      name: "${APPLICATION_NAME}-canary"
      weight: 10
    host: ""
    port:
      targetPort: web
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
      weight: 90
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    labels:
      template: monitoring-demo-template
    name: jenkins_edit
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: ${SA_NAME}
    namespace: ${SA_NAMESPACE}
  userNames:
  - system:serviceaccount:${SA_NAMESPACE}:${SA_NAME}
parameters:
- description: The name of the application
  name: APPLICATION_NAME
  required: true
  value: hello-world
- description: Name of a service accoutn that can deploy to this project
  name: SA_NAME
  required: true
  value: jenkins
- description: Namespace of service account that can deploy to this project
  name: SA_NAMESPACE
  required: true
  value: monitoring-demo-cicd
